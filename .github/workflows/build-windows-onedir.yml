name: Build Windows Executable (OneDir - Less Warnings)

on:
  workflow_dispatch:
    # Manual trigger only

jobs:
  build-windows-onedir:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Verify Pillow installation
      run: |
        python -c "import PIL; print('Pillow version:', PIL.__version__)"
        python -c "from PIL import Image; print('PIL Image module available')"

    - name: Verify icon files exist
      run: |
        dir assets\
        Get-ChildItem assets\icon.ico

    - name: Generate ICO file
      run: |
        python -c "
        from PIL import Image, ImageDraw
        import os

        def add_rounded_corners(image, radius=200):
            mask = Image.new('L', image.size, 0)
            draw = ImageDraw.Draw(mask)
            draw.rounded_rectangle([0, 0, image.size[0], image.size[1]], radius=radius, fill=255)
            output = Image.new('RGBA', image.size, (0, 0, 0, 0))
            output.paste(image, mask=mask)
            return output

        # Open and process the PNG
        img = Image.open('assets/icon.png')
        img = img.convert('RGBA')
        rounded_img = add_rounded_corners(img, radius=200)

        # Create a 256x256 ICO file (most important size for Windows)
        resized = rounded_img.resize((256, 256), Image.LANCZOS)
        resized.save('assets/icon.ico', format='ICO')

        print(f'Generated ICO file')
        print(f'File size: {os.path.getsize("assets/icon.ico")} bytes')

        # Test if it works
        try:
            test_img = Image.open('assets/icon.ico')
            print(f'ICO test: {test_img.size}, {test_img.mode} - SUCCESS!')
        except Exception as e:
            print(f'ICO test failed: {e}')
        "

    - name: Build Windows executable (OneDir)
      run: |
        # Build as directory instead of single file (less likely to trigger warnings)
        pyinstaller --onedir --windowed --name "QuoteFlow" --icon="assets/icon.ico" --add-data="src/ui;ui" --add-data="src/database;database" --add-data="src/excel_exporter.py;." --add-data="data/quotation_template.xlsx;data" --add-data="prices.db;." --hidden-import="ui.quotation_ui" --hidden-import="database.price_loader" --hidden-import="database.getsql" --hidden-import="database.handlers.default_handler" --hidden-import="database.handlers.header_handler" --hidden-import="database.handlers.other_handler" --hidden-import="excel_exporter" --hidden-import="sqlite3" --hidden-import="openpyxl" --exclude-module="matplotlib" --exclude-module="numpy" --exclude-module="scipy" --exclude-module="pandas" --exclude-module="tkinter" --exclude-module="PIL" --exclude-module="cv2" --exclude-module="torch" --exclude-module="torchvision" --exclude-module="sklearn" --exclude-module="skimage" --exclude-module="tensorflow" --exclude-module="keras" --exclude-module="h5py" --exclude-module="sympy" --exclude-module="jinja2" --exclude-module="pygments" --exclude-module="imageio" --exclude-module="psutil" --exclude-module="setuptools" --exclude-module="distutils" --exclude-module="pkg_resources" --exclude-module="packaging" --exclude-module="certifi" --exclude-module="charset_normalizer" --exclude-module="requests" --exclude-module="urllib3" --exclude-module="werkzeug" --exclude-module="cpuinfo" --exclude-module="appdirs" src/main.py

    - name: Upload Windows executable directory
      uses: actions/upload-artifact@v4
      with:
        name: QuoteFlow-Windows-OneDir
        path: dist/QuoteFlow/
        retention-days: 30
